<?xml version="1.0" encoding="UTF-8" ?><ChoregrapheProject xmlns="http://www.aldebaran-robotics.com/schema/choregraphe/project.xsd" xar_version="3"><Box name="root" id="-1" localization="8" tooltip="Root box of Choregraphe&apos;s behavior. Highest level possible." x="0" y="0"><bitmap>media/images/box/root.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="FrontTactilTouched desc" id="4" /><Input name="memSoundEvent" type="0" type_size="1" nature="4" stm_value_name="memSoundEvent" inner="1" tooltip="memSoundEvent desc" id="5" /><Input name="memAnimationEvent" type="0" type_size="1" nature="4" stm_value_name="memAnimationEvent" inner="1" tooltip="memAnimationEvent desc" id="6" /><Input name="memEasyPoseEvent" type="0" type_size="1" nature="4" stm_value_name="memEasyPoseEvent" inner="1" tooltip="memEasyPoseEvent desc" id="7" /><Input name="memBreathAnimationEvent" type="0" type_size="1" nature="4" stm_value_name="memBreathAnimationEvent" inner="1" tooltip="memBreathAnimationEvent desc" id="8" /><Input name="memEyesToggle" type="0" type_size="1" nature="4" stm_value_name="memEyesToggle" inner="1" tooltip="memEyesToggle desc" id="9" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="10" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram scale="100"><Box name="Guided meditation" id="1" localization="8" tooltip="" x="514" y="13"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)


    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        self.running = False

    def onInput_onStart(self):
        from time import sleep
        self.animatedSpeech = ALProxy("ALAnimatedSpeech")
        self.memory = self.session().service("ALMemory")
        self.speechFile = "/../meditation.json"

        """DEBUG"""
        self.DEBUGGING = False
        if self.DEBUGGING :
            self.speechFile = "/../medMOD.json"

        dialogList = self.makeList()
        self.running = True
        self.memory.insertData("memHeadTouched", False)


        if self.DEBUGGING :
            #dialogList.pop(1)
            pass

        temp = dialogList #todo delete
        self.logger.debug("variable 'temp' is " + str(type(temp)) + " and contains: " + str(temp))
        self.logger.debug("list content type: "+str(type(temp[0])))

        """main loop"""
        for line in dialogList:
            if not self.running:
                return None
            self.speech(line)

        #all dialog has been spoken.
        self.onInput_onStop()

    def speech(self,line):
        if not self.running: #stop, prevent recursive loop
            return None
        from time import sleep
        self.logger.debug(line)

        #

        line = " \\bound=W\\ \\vct=82\\ \\rspd=85\\ " + line + "\\pau=2000\\"
        speechID = self.animatedSpeech.post.say(line)

        while self.animatedSpeech.isRunning(speechID) :
            if not self.running :
                #behavior stopped
                self.animatedSpeech.stop(speechID)
                return None

            if self.memory.getData("memHeadTouched") :
                self.animatedSpeech.stop(speechID)
                self.memory.insertData("memHeadTouched", False)
                #todo enable startSound lines on physical robot.
                self.animatedSpeech.post.say("^startSound(Aldebaran/enu_ono_sigh_resignation_03) ^waitSound(Aldebaran/enu_ono_sigh_resignation_03)")
                sleep(2)

                while not self.memory.getData("memHeadTouched") and self.running :
                    sleep(1)

                self.memory.insertData("memHeadTouched", False)
                self.animatedSpeech.say("^startSound(Aldebaran/enu_ono_throat) ^waitSound(Aldebaran/enu_ono_throat)")
                self.speech(line) #recursion


        #speak next line
        return None

    def makeList(self):
        import json
        with open (self.behaviorAbsolutePath() + self.speechFile) as input:
            list = json.load(input)
            list = [x.encode('UTF8') for x in list] #unicode to string
        return list

    def onInput_onStop(self):
        self.running = False
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="headTouch" id="2" localization="8" tooltip="" x="84" y="97"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)
        self.memory = self.session().service("ALMemory")
        self.memory.insertData("memHeadTouched", False)

    def onLoad(self):
        pass


    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self,p):
        if p == 1:
            self.memory.insertData("memHeadTouched", True)
        else:
            pass


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="playSound" id="7" localization="8" tooltip="" x="109" y="185"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.audioPlayer = self.session().service("ALAudioPlayer")

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self,strFileName):
        temp = strFileName
        self.logger.info("variable 'temp' is " + str(type(temp)) + " and contains: " + str(temp))

        soundPath = self.behaviorAbsolutePath() + "/../fx/" + strFileName
        self.logger.info(soundPath)
        self.audioPlayer.playFile(soundPath)

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="SlowBowWithArms_01" id="9" localization="8" tooltip="ID : #01C 0026&#x0A;&#x0A;===================&#x0A;&#x0A;Tags : &#x0A;- Go&#x0A;- Affirmative&#x0A;- Can&#x0A;- Indicate&#x0A;&#x0A;===================&#x0A;&#x0A;Common dialog : Yes&#x0A;&#x0A;===================&#x0A;&#x0A;Start stance : Center&#x0A;End stance : Center" x="284" y="9"><bitmap>media/images/box/movement/move.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="49"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="12" value="-15.7801" /><Key frame="21" value="-13.0094" /><Key frame="26" value="-5.6159" smooth="1" symmetrical="1"><Tangent side="left" interpType="bezier" abscissaParam="-2.41667" ordinateParam="-1.29873" /><Tangent side="right" interpType="bezier" abscissaParam="3.86667" ordinateParam="2.07796" /></Key><Key frame="34" value="-17.7526" /><Key frame="39" value="-6.45263" /><Key frame="48" value="-11.7512" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="13" value="-70.4669" /><Key frame="22" value="-70.4669" /><Key frame="27" value="-70.4669" /><Key frame="35" value="-64.8655" /><Key frame="40" value="-56.1041" /><Key frame="49" value="-48.0065" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="13" value="-68.1519" /><Key frame="22" value="-57.8875" /><Key frame="27" value="-55.3138" /><Key frame="35" value="-59.9818" /><Key frame="40" value="-59.9818" /><Key frame="49" value="-59.9818" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="13" value="0.865834" /><Key frame="22" value="0.854073" /><Key frame="27" value="0.843551" /><Key frame="35" value="0.8" /><Key frame="40" value="0.592788" /><Key frame="49" value="0.376586" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="13" value="86.8891" /><Key frame="22" value="77.9753" /><Key frame="27" value="76.4061" /><Key frame="35" value="79.2437" /><Key frame="40" value="79.8553" /><Key frame="49" value="81.1044" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="13" value="18.7507" /><Key frame="22" value="17.4487" /><Key frame="27" value="16.6447" /><Key frame="35" value="13.9876" /><Key frame="40" value="19.1114" /><Key frame="49" value="23.5476" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="13" value="-21.016" /><Key frame="22" value="-43.9666" /><Key frame="27" value="-54.9769" /><Key frame="35" value="-64.7665" /><Key frame="40" value="-39.1675" /><Key frame="49" value="-5.66774" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="12" value="57.2183" /><Key frame="21" value="58.8217" /><Key frame="26" value="58.8217" /><Key frame="34" value="36.048" /><Key frame="39" value="31.3571" /><Key frame="48" value="29.705" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="12" value="86.1355" /><Key frame="21" value="74.9552" /><Key frame="26" value="72.8777" /><Key frame="34" value="76.6674" /><Key frame="39" value="77.494" /><Key frame="48" value="78.1073" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="12" value="0.618988" /><Key frame="21" value="0.456782" /><Key frame="26" value="0.367645" /><Key frame="34" value="0.304126" /><Key frame="39" value="0.304126" /><Key frame="48" value="0.304126" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="12" value="72.7806" /><Key frame="21" value="70.0927" /><Key frame="26" value="69.5119" /><Key frame="34" value="74.1141" /><Key frame="39" value="77.0457" /><Key frame="48" value="79.665" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="12" value="-10.8524" /><Key frame="21" value="-12.9611" /><Key frame="26" value="-13.8244" /><Key frame="34" value="-13.8244" /><Key frame="39" value="-14.4397" /><Key frame="48" value="-14.4397" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="12" value="-21.8077" /><Key frame="21" value="20.7802" /><Key frame="26" value="42.9035" /><Key frame="34" value="64.4107" /><Key frame="39" value="39.9616" /><Key frame="48" value="6.68441" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="10" value="-5.80859" /><Key frame="22" value="-12.6796" /><Key frame="32" value="-12.8511" /><Key frame="46" value="-3.27059" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="10" value="-0.0360249" /><Key frame="22" value="-0.60925" /><Key frame="32" value="-0.60925" /><Key frame="46" value="-0.0194984" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="10" value="2.28328" /><Key frame="22" value="6.12871" /><Key frame="32" value="6.09192" /><Key frame="46" value="-0.576694" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="init" id="10" localization="8" tooltip="" x="196" y="20"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        self.motion = self.session().service("ALMotion")
        self.alife = self.session().service("ALAutonomousLife")
        self.motion.wakeUp()
        self.tracker = self.session().service("ALTracker")

        self.alife.setAutonomousAbilityEnabled("All", False)
        self.tracker.unregisterAllTargets() #attempt to get rid of whoever is tracked on launch

        self.motion.setBreathEnabled('Arms', True)

        self.onStopped()


    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Tactile Head" id="6" localization="8" tooltip="Detect touch on head tactile sensor." x="78" y="1"><bitmap>media/images/box/sensors/tactileHead.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
            self.onStopped() #~ activate output of the box
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="FrontTactilTouched" type="0" type_size="1" nature="4" stm_value_name="FrontTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="4" /><Input name="MiddleTactilTouched" type="0" type_size="1" nature="4" stm_value_name="MiddleTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="5" /><Input name="RearTactilTouched" type="0" type_size="1" nature="4" stm_value_name="RearTactilTouched" inner="1" tooltip="Connected to ALMemory. Will be stimulated every time the value subscribed to changes, respecting the refresh period." id="6" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is stopped." id="7" /><Output name="frontTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The front tactile head sensor was touched." id="8" /><Output name="middleTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The middle tactile head sensor was touched." id="9" /><Output name="rearTouched" type="1" type_size="1" nature="2" inner="0" tooltip="The rear tactile head sensor was touched." id="10" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="If &gt; 0" id="1" localization="8" tooltip="Transmit only if value is &gt; 0." x="260" y="17"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="If &gt; 0" id="2" localization="8" tooltip="Transmit only if value is &gt; 0." x="256" y="119"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="If &gt; 0" id="3" localization="8" tooltip="Transmit only if value is &gt; 0." x="261" y="223"><bitmap>media/images/box/box-diagram.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_onStart(self, p):
        if(p > 0):
            self.onStopped() #~ activate output of the box
        pass

    def onInput_onStop(self):
        self.onUnload() #~ it is usually a good idea to call onUnload of this box in a onStop method, as the code written in onUnload is used to finish the working of the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="0" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="0" indexofinput="8" outputowner="1" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="0" indexofinput="9" outputowner="2" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="0" indexofoutput="6" /><Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Head-sequence" type="Lock" timeout="0" /></Box><Box name="Go to position Stand" id="12" localization="8" tooltip="Robot will go to the position Stand&lt;br/&gt;Position description : Standing position with low power consumption. " x="398" y="0"><bitmap>media/images/positions/Stand.png</bitmap><script language="4"><content><![CDATA[#~ This script was generated automatically by drang&drop from Position Library
class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.postureProxy = None
        try:
            self.postureProxy = ALProxy("ALRobotPosture")
        except:
            self.logger.error("Module 'ALRobotPosture' not found.")

    def onUnload(self):
        if(self.postureProxy != None):
            self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.postureProxy != None):
            result = self.postureProxy.goToPosture("Stand", 0.8)
            if(result):
                self.success()
            else:
                self.logger.error("Posture Stand is not a part of the standard posture library or robot cannot reach the posture")
                self.failure()
        else:
            self.failure()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method,               as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" /><Resource name="All motors" type="Lock" timeout="0" /><Resource name="Stiffness" type="Lock" timeout="0" /></Box><Box name="easy pose" id="13" localization="8" tooltip="" x="160" y="355"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="31"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="26" value="16.4356" /><Key frame="31" value="16.4356" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="26" value="2.81249" /><Key frame="31" value="2.81249" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="26" value="-21.5332" /><Key frame="31" value="-21.6211" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="26" value="-0.263673" /><Key frame="31" value="-0.263673" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="26" value="9.49219" /><Key frame="31" value="9.4043" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="26" value="-38.584" /><Key frame="31" value="-38.584" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="26" value="-82.793" /><Key frame="31" value="-82.793" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="26" value="0.795255" /><Key frame="31" value="0.795255" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="26" value="77.3438" /><Key frame="31" value="77.3438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="26" value="0.527345" /><Key frame="31" value="0.527345" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="26" value="-35.0712" /><Key frame="31" value="-35.0712" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="26" value="44.0332" /><Key frame="31" value="44.0332" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="26" value="76.377" /><Key frame="31" value="76.377" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="26" value="0.659051" /><Key frame="31" value="0.659051" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="26" value="79.1894" /><Key frame="31" value="79.1894" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="26" value="-3.60351" /><Key frame="31" value="-3.60351" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="26" value="63.1917" /><Key frame="31" value="63.1917" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="breathAnimation" id="14" localization="8" tooltip="" x="181" y="420"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="130" size="130"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe31" index="31"><Diagram><Box name="soundEvent" id="1" localization="8" tooltip="" x="93" y="39"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        memory = self.session().service("ALMemory")
        memory.raiseMicroEvent("memSoundEvent", "breath.ogg")

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="35" value="16.4356" /><Key frame="69" value="-10.5116" /><Key frame="125" value="16.4356" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="35" value="-0.0201917" /><Key frame="64" value="0" /><Key frame="125" value="-0.0201917" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="0" unit="0"><Key frame="35" value="-21.5332" /><Key frame="64" value="-2.63671" /><Key frame="125" value="-21.5332" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipRoll" mute="0" unit="0"><Key frame="35" value="-0.263673" /><Key frame="64" value="-0.351564" /><Key frame="125" value="-0.263673" /></ActuatorCurve><ActuatorCurve name="value" actuator="KneePitch" mute="0" unit="0"><Key frame="35" value="9.49219" /><Key frame="64" value="-0.439454" /><Key frame="125" value="9.49219" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="35" value="-38.584" /><Key frame="64" value="-59.9414" /><Key frame="125" value="-38.584" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="35" value="-82.793" /><Key frame="64" value="-70.1367" /><Key frame="125" value="-82.793" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="35" value="0.795255" /><Key frame="64" value="0.604569" /><Key frame="125" value="0.795255" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="35" value="77.3438" /><Key frame="64" value="71.4551" /><Key frame="125" value="77.3438" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="35" value="0.527345" /><Key frame="64" value="2.63671" /><Key frame="125" value="0.527345" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="35" value="-35.0712" /><Key frame="64" value="-59.7688" /><Key frame="125" value="-35.0712" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="35" value="44.0332" /><Key frame="64" value="56.7774" /><Key frame="125" value="44.0332" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="35" value="76.377" /><Key frame="64" value="71.2793" /><Key frame="125" value="76.377" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="35" value="0.659051" /><Key frame="64" value="0.601054" /><Key frame="125" value="0.659051" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="35" value="79.1894" /><Key frame="64" value="76.7285" /><Key frame="125" value="79.1894" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="35" value="-3.60351" /><Key frame="64" value="-6.50391" /><Key frame="125" value="-3.60351" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="35" value="63.1917" /><Key frame="64" value="56.1604" /><Key frame="125" value="63.1917" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="ALLeds" id="11" localization="8" tooltip="" x="46" y="407"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        self.leds = self.session().service("ALLeds")

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self, p):
        p = int(p)
        if p == 1 :
            self.leds.fade('FaceLeds',1,1)
        elif p == 0 :
            self.leds.fade('FaceLeds',0,1)
        else:
            pass

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="2" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Box name="Play Sound" id="15" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="65" y="0"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../fx/169855__gnotesoundz__wind-chime-g-003.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Box name="noticeAnimations" id="16" localization="8" tooltip="" x="291" y="164"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="memNoticeAnimation" type="0" type_size="1" nature="4" stm_value_name="memNoticeAnimation" inner="1" tooltip="memNoticeAnimation desc" id="4" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="5" /><Timeline enable="1" fps="0" start_frame="1" end_frame="-1" size="-1"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Goto (name)" id="1" localization="8" tooltip="Jump to the frame name set in parameters." x="113" y="44"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onInput_onGo(self,p):
        self.getParentTimeline().goTo(p)]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onGo" type="3" type_size="1" nature="1" inner="0" tooltip="" id="2" /></Box><Box name="Log" id="2" localization="8" tooltip="Prompt the message in the debug window. You can set a prefix and a priority&#x0A;for the message in the parameters." x="104" y="165"><bitmap>media/images/box/print.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        #~ puts code for box initialization here
        pass

    def onUnload(self):
        #~ puts code for box cleanup here
        pass

    def onInput_message(self, p):
        sPriority = self.getParameter("Priority")
        sMessage = self.getParameter("Message prefix")
        if( sMessage != "" and p != None ):
            sMessage += ": "
        if( p != None ):
            sMessage += str(p)
        if( sPriority == "Fatal" ):
            self.logger.fatal( sMessage )
        elif( sPriority == "Error" ):
            self.logger.error( sMessage )
        elif( sPriority == "Warning" ):
            self.logger.warning( sMessage )
        elif( sPriority == "Info" ):
            self.logger.info( sMessage )
        elif( sPriority == "Debug" ):
            self.logger.debug( sMessage )
        self.onDone()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="message" type="0" type_size="1" nature="1" inner="0" tooltip='The message to print or a &quot;Bang&quot; to only print the message set as parameter.' id="2" /><Output name="onDone" type="1" type_size="1" nature="2" inner="0" tooltip="Signal sent when box behavior is finished." id="3" /><Parameter name="Message prefix" inherits_from_parent="0" content_type="3" value="Message text" default_value="Message text" custom_choice="0" tooltip="Enter the text you want to print before the input message." id="4" /><Parameter name="Priority" inherits_from_parent="0" content_type="3" value="Info" default_value="Info" custom_choice="0" tooltip="Enter the priority of your message. If you select error, the box will get red when it will be stimulated." id="5"><Choice value="Fatal" /><Choice value="Error" /><Choice value="Warning" /><Choice value="Info" /><Choice value="Debug" /></Parameter></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="4" /></Diagram></BehaviorKeyframe><BehaviorKeyframe name="body" index="20"><Diagram><Box name="noticeBody" id="1" localization="8" tooltip="" x="149" y="66"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="173"><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="13" value="12.5684" /><Key frame="26" value="12.4805" /><Key frame="38" value="12.6562" /><Key frame="51" value="13.9746" /><Key frame="63" value="17.4902" /><Key frame="76" value="22.3242" /><Key frame="88" value="27.6855" /><Key frame="101" value="31.9922" /><Key frame="113" value="28.916" /><Key frame="126" value="22.7637" /><Key frame="138" value="16.084" /><Key frame="151" value="11.0742" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="13" value="1.58204" /><Key frame="26" value="1.66993" /><Key frame="38" value="1.66993" /><Key frame="51" value="1.66993" /><Key frame="63" value="1.84571" /><Key frame="76" value="2.02149" /><Key frame="88" value="2.02149" /><Key frame="101" value="1.9336" /><Key frame="113" value="2.02149" /><Key frame="126" value="2.02149" /><Key frame="138" value="2.02149" /><Key frame="151" value="2.10938" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HipRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="KneePitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="11" value="-37.1777" /><Key frame="23" value="-50.8008" /><Key frame="36" value="-71.3672" /><Key frame="48" value="-89.5" /><Key frame="61" value="-89.5" /><Key frame="73" value="-81.2988" /><Key frame="86" value="-62.4902" /><Key frame="98" value="-43.5938" /><Key frame="111" value="-31.9922" /><Key frame="123" value="-34.2773" /><Key frame="136" value="-34.0137" /><Key frame="148" value="-31.9922" /><Key frame="161" value="-32.3437" /><Key frame="173" value="-31.9922" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="11" value="-63.1055" /><Key frame="23" value="-63.0176" /><Key frame="36" value="-62.9297" /><Key frame="48" value="-62.8418" /><Key frame="61" value="-57.3926" /><Key frame="73" value="-49.6582" /><Key frame="86" value="-49.043" /><Key frame="98" value="-49.2187" /><Key frame="111" value="-50.2734" /><Key frame="123" value="-50.2734" /><Key frame="136" value="-50.1855" /><Key frame="148" value="-50.7129" /><Key frame="161" value="-50.4492" /><Key frame="173" value="-49.834" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="11" value="0.607206" /><Key frame="23" value="0.6942" /><Key frame="36" value="0.842707" /><Key frame="48" value="0.897188" /><Key frame="61" value="0.891916" /><Key frame="73" value="0.908612" /><Key frame="86" value="0.81283" /><Key frame="98" value="0.607206" /><Key frame="111" value="0.518453" /><Key frame="123" value="0.516696" /><Key frame="136" value="0.526362" /><Key frame="148" value="0.524605" /><Key frame="161" value="0.524605" /><Key frame="173" value="0.525483" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="11" value="68.4668" /><Key frame="23" value="68.3789" /><Key frame="36" value="67.0605" /><Key frame="48" value="68.291" /><Key frame="61" value="69.1699" /><Key frame="73" value="69.9609" /><Key frame="86" value="69.873" /><Key frame="98" value="69.873" /><Key frame="111" value="69.7852" /><Key frame="123" value="67.4121" /><Key frame="136" value="64.4238" /><Key frame="148" value="63.8965" /><Key frame="161" value="64.0723" /><Key frame="173" value="65.127" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="11" value="14.502" /><Key frame="23" value="17.4023" /><Key frame="36" value="22.9394" /><Key frame="48" value="37.1777" /><Key frame="61" value="42.627" /><Key frame="73" value="41.3086" /><Key frame="86" value="30.2344" /><Key frame="98" value="20.4785" /><Key frame="111" value="12.7441" /><Key frame="123" value="12.1289" /><Key frame="136" value="10.3711" /><Key frame="148" value="9.93164" /><Key frame="161" value="9.93164" /><Key frame="173" value="10.0195" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="11" value="-23.2058" /><Key frame="23" value="-26.8973" /><Key frame="36" value="-42.8936" /><Key frame="48" value="-60.2961" /><Key frame="61" value="-55.55" /><Key frame="73" value="-42.1025" /><Key frame="86" value="-33.577" /><Key frame="98" value="-28.0399" /><Key frame="111" value="-33.8407" /><Key frame="123" value="-42.1025" /><Key frame="136" value="-50.7159" /><Key frame="148" value="-50.628" /><Key frame="161" value="-50.8038" /><Key frame="173" value="-50.8038" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="11" value="37.1777" /><Key frame="23" value="50.8008" /><Key frame="36" value="71.3672" /><Key frame="48" value="89.5" /><Key frame="61" value="89.5" /><Key frame="73" value="81.2988" /><Key frame="86" value="62.4902" /><Key frame="98" value="43.5938" /><Key frame="111" value="31.9922" /><Key frame="123" value="34.2773" /><Key frame="136" value="34.0137" /><Key frame="148" value="31.9922" /><Key frame="161" value="32.3437" /><Key frame="173" value="31.9922" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="11" value="63.1055" /><Key frame="23" value="63.0176" /><Key frame="36" value="62.9297" /><Key frame="48" value="62.8418" /><Key frame="61" value="57.3926" /><Key frame="73" value="49.6582" /><Key frame="86" value="49.043" /><Key frame="98" value="49.2187" /><Key frame="111" value="50.2734" /><Key frame="123" value="50.2734" /><Key frame="136" value="50.1855" /><Key frame="148" value="50.7129" /><Key frame="161" value="50.4492" /><Key frame="173" value="49.834" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="11" value="0.607206" /><Key frame="23" value="0.6942" /><Key frame="36" value="0.842707" /><Key frame="48" value="0.897188" /><Key frame="61" value="0.891916" /><Key frame="73" value="0.908612" /><Key frame="86" value="0.81283" /><Key frame="98" value="0.607206" /><Key frame="111" value="0.518453" /><Key frame="123" value="0.516696" /><Key frame="136" value="0.526362" /><Key frame="148" value="0.524605" /><Key frame="161" value="0.524605" /><Key frame="173" value="0.525483" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="11" value="68.4668" /><Key frame="23" value="68.3789" /><Key frame="36" value="67.0605" /><Key frame="48" value="68.291" /><Key frame="61" value="69.1699" /><Key frame="73" value="69.9609" /><Key frame="86" value="69.873" /><Key frame="98" value="69.873" /><Key frame="111" value="69.7852" /><Key frame="123" value="67.4121" /><Key frame="136" value="64.4238" /><Key frame="148" value="63.8965" /><Key frame="161" value="64.0723" /><Key frame="173" value="65.127" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="11" value="-14.502" /><Key frame="23" value="-17.4023" /><Key frame="36" value="-22.9394" /><Key frame="48" value="-37.1777" /><Key frame="61" value="-42.627" /><Key frame="73" value="-41.3086" /><Key frame="86" value="-30.2344" /><Key frame="98" value="-20.4785" /><Key frame="111" value="-12.7441" /><Key frame="123" value="-12.1289" /><Key frame="136" value="-10.3711" /><Key frame="148" value="-9.93164" /><Key frame="161" value="-9.93164" /><Key frame="173" value="-10.0195" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="11" value="23.2058" /><Key frame="23" value="26.8973" /><Key frame="36" value="42.8936" /><Key frame="48" value="60.2961" /><Key frame="61" value="55.55" /><Key frame="73" value="42.1025" /><Key frame="86" value="33.577" /><Key frame="98" value="28.0399" /><Key frame="111" value="33.8407" /><Key frame="123" value="42.1025" /><Key frame="136" value="50.7159" /><Key frame="148" value="50.628" /><Key frame="161" value="50.8038" /><Key frame="173" value="50.8038" /></ActuatorCurve></ActuatorList></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /><Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe><BehaviorKeyframe name="feet" index="30"><Diagram><Box name="noticeFeet" id="1" localization="8" tooltip="" x="177" y="60"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="146"><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HipPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HipRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="KneePitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="21" value="24.7852" /><Key frame="33" value="7.20704" /><Key frame="46" value="5.44922" /><Key frame="58" value="10.5469" /><Key frame="71" value="11.0742" /><Key frame="83" value="16.6992" /><Key frame="96" value="32.8711" /><Key frame="108" value="39.2871" /><Key frame="121" value="39.1992" /><Key frame="133" value="37.0019" /><Key frame="146" value="37.8809" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="21" value="12.3926" /><Key frame="33" value="11.9531" /><Key frame="46" value="17.8418" /><Key frame="58" value="26.1914" /><Key frame="71" value="39.5508" /><Key frame="83" value="42.627" /><Key frame="96" value="42.5391" /><Key frame="108" value="42.8027" /><Key frame="121" value="42.8027" /><Key frame="133" value="42.0996" /><Key frame="146" value="42.0996" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="21" value="0.669596" /><Key frame="33" value="0.662566" /><Key frame="46" value="0.657294" /><Key frame="58" value="0.656415" /><Key frame="71" value="0.656415" /><Key frame="83" value="0.656415" /><Key frame="96" value="0.657294" /><Key frame="108" value="0.655536" /><Key frame="121" value="0.655536" /><Key frame="133" value="0.655536" /><Key frame="146" value="0.655536" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="21" value="50.8008" /><Key frame="33" value="49.2188" /><Key frame="46" value="52.998" /><Key frame="58" value="63.1934" /><Key frame="71" value="73.3887" /><Key frame="83" value="74.707" /><Key frame="96" value="74.1797" /><Key frame="108" value="71.543" /><Key frame="121" value="71.9824" /><Key frame="133" value="72.9492" /><Key frame="146" value="73.3008" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="33" value="-5.53711" /><Key frame="58" value="-18.5449" /><Key frame="83" value="-19.9512" /><Key frame="96" value="-22.6758" /><Key frame="121" value="-19.0723" /><Key frame="146" value="-20.4785" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="21" value="30.2372" /><Key frame="33" value="28.0399" /><Key frame="46" value="30.3251" /><Key frame="58" value="39.2021" /><Key frame="71" value="46.2335" /><Key frame="83" value="45.003" /><Key frame="96" value="33.577" /><Key frame="108" value="34.1923" /><Key frame="121" value="34.1044" /><Key frame="133" value="33.8407" /><Key frame="146" value="33.8407" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="21" value="-24.7852" /><Key frame="33" value="-7.20704" /><Key frame="46" value="-5.44922" /><Key frame="58" value="-10.5469" /><Key frame="71" value="-11.0742" /><Key frame="83" value="-16.6992" /><Key frame="96" value="-32.8711" /><Key frame="108" value="-39.2871" /><Key frame="121" value="-39.1992" /><Key frame="133" value="-37.0019" /><Key frame="146" value="-37.8809" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="21" value="-12.3926" /><Key frame="33" value="-11.9531" /><Key frame="46" value="-17.8418" /><Key frame="58" value="-26.1914" /><Key frame="71" value="-39.5508" /><Key frame="83" value="-42.627" /><Key frame="96" value="-42.5391" /><Key frame="108" value="-42.8027" /><Key frame="121" value="-42.8027" /><Key frame="133" value="-42.0996" /><Key frame="146" value="-42.0996" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="21" value="0.669596" /><Key frame="33" value="0.662566" /><Key frame="46" value="0.657294" /><Key frame="58" value="0.656415" /><Key frame="71" value="0.656415" /><Key frame="83" value="0.656415" /><Key frame="96" value="0.657294" /><Key frame="108" value="0.655536" /><Key frame="121" value="0.655536" /><Key frame="133" value="0.655536" /><Key frame="146" value="0.655536" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="21" value="50.8008" /><Key frame="33" value="49.2188" /><Key frame="46" value="52.998" /><Key frame="58" value="63.1934" /><Key frame="71" value="73.3887" /><Key frame="83" value="74.707" /><Key frame="96" value="74.1797" /><Key frame="108" value="71.543" /><Key frame="121" value="71.9824" /><Key frame="133" value="72.9492" /><Key frame="146" value="73.3008" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="33" value="5.53711" /><Key frame="58" value="18.5449" /><Key frame="83" value="19.9512" /><Key frame="96" value="22.6758" /><Key frame="121" value="19.0723" /><Key frame="146" value="20.4785" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="21" value="-30.2372" /><Key frame="33" value="-28.0399" /><Key frame="46" value="-30.3251" /><Key frame="58" value="-39.2021" /><Key frame="71" value="-46.2335" /><Key frame="83" value="-45.003" /><Key frame="96" value="-33.577" /><Key frame="108" value="-34.1923" /><Key frame="121" value="-34.1044" /><Key frame="133" value="-33.8407" /><Key frame="146" value="-33.8407" /></ActuatorCurve></ActuatorList></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /><Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe><BehaviorKeyframe name="legs" index="40"><Diagram><Box name="noticeLegs" id="1" localization="8" tooltip="" x="204" y="65"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="185"><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="13" value="10.1953" /><Key frame="26" value="10.459" /><Key frame="38" value="11.4258" /><Key frame="51" value="17.1387" /><Key frame="63" value="27.6855" /><Key frame="76" value="31.9922" /><Key frame="88" value="28.125" /><Key frame="101" value="17.3144" /><Key frame="113" value="11.8652" /><Key frame="126" value="11.9531" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="13" value="1.75782" /><Key frame="26" value="1.75782" /><Key frame="38" value="1.75782" /><Key frame="51" value="1.75782" /><Key frame="63" value="1.75782" /><Key frame="76" value="1.66993" /><Key frame="88" value="1.66993" /><Key frame="101" value="1.66993" /><Key frame="113" value="1.66993" /><Key frame="126" value="1.75782" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HipRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="KneePitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="23" value="35.0684" /><Key frame="35" value="17.5781" /><Key frame="48" value="8.34961" /><Key frame="60" value="8.87695" /><Key frame="73" value="12.1289" /><Key frame="85" value="20.0391" /><Key frame="98" value="42.0117" /><Key frame="110" value="68.3789" /><Key frame="123" value="53.4375" /><Key frame="135" value="28.125" /><Key frame="148" value="9.14062" /><Key frame="160" value="19.248" /><Key frame="173" value="31.6406" /><Key frame="185" value="33.3984" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="23" value="83.1445" /><Key frame="35" value="82.793" /><Key frame="48" value="82.793" /><Key frame="60" value="82.8809" /><Key frame="73" value="82.8809" /><Key frame="85" value="82.8809" /><Key frame="98" value="82.793" /><Key frame="110" value="84.1992" /><Key frame="123" value="84.1113" /><Key frame="135" value="84.2871" /><Key frame="148" value="84.375" /><Key frame="160" value="84.5508" /><Key frame="173" value="84.5508" /><Key frame="185" value="84.375" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="23" value="0.77065" /><Key frame="35" value="0.759227" /><Key frame="48" value="0.429701" /><Key frame="60" value="0.467487" /><Key frame="73" value="0.74341" /><Key frame="85" value="0.758348" /><Key frame="98" value="0.759227" /><Key frame="110" value="0.757469" /><Key frame="123" value="0.6529" /><Key frame="135" value="0.457821" /><Key frame="148" value="0.424429" /><Key frame="160" value="0.447276" /><Key frame="173" value="0.466608" /><Key frame="185" value="0.463972" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="23" value="77.959" /><Key frame="35" value="77.2559" /><Key frame="48" value="76.1133" /><Key frame="60" value="74.707" /><Key frame="73" value="74.3555" /><Key frame="85" value="77.3438" /><Key frame="98" value="91.4063" /><Key frame="110" value="104.678" /><Key frame="123" value="100.811" /><Key frame="135" value="86.8359" /><Key frame="148" value="76.1133" /><Key frame="160" value="75.0586" /><Key frame="173" value="75.0586" /><Key frame="185" value="72.2461" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="23" value="-1.23047" /><Key frame="35" value="-2.02149" /><Key frame="48" value="-2.90039" /><Key frame="60" value="-2.54882" /><Key frame="73" value="-2.28516" /><Key frame="85" value="-5.18555" /><Key frame="98" value="-7.99804" /><Key frame="110" value="-9.14062" /><Key frame="123" value="-6.50391" /><Key frame="135" value="-5.18555" /><Key frame="148" value="-3.95508" /><Key frame="160" value="-2.19727" /><Key frame="173" value="-1.14258" /><Key frame="185" value="-1.40625" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="23" value="20.2175" /><Key frame="35" value="4.83644" /><Key frame="48" value="-6.50159" /><Key frame="60" value="-6.94104" /><Key frame="73" value="-8.17153" /><Key frame="85" value="-18.2791" /><Key frame="98" value="-18.9822" /><Key frame="110" value="-12.5661" /><Key frame="123" value="-8.69887" /><Key frame="135" value="-8.69887" /><Key frame="148" value="-8.69887" /><Key frame="160" value="3.1665" /><Key frame="173" value="22.3269" /><Key frame="185" value="24.8758" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="23" value="-35.0684" /><Key frame="35" value="-17.5781" /><Key frame="48" value="-8.34961" /><Key frame="60" value="-8.87695" /><Key frame="73" value="-12.1289" /><Key frame="85" value="-20.0391" /><Key frame="98" value="-42.0117" /><Key frame="110" value="-68.3789" /><Key frame="123" value="-53.4375" /><Key frame="135" value="-28.125" /><Key frame="148" value="-9.14062" /><Key frame="160" value="-19.248" /><Key frame="173" value="-31.6406" /><Key frame="185" value="-33.3984" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="23" value="-83.1445" /><Key frame="35" value="-82.793" /><Key frame="48" value="-82.793" /><Key frame="60" value="-82.8809" /><Key frame="73" value="-82.8809" /><Key frame="85" value="-82.8809" /><Key frame="98" value="-82.793" /><Key frame="110" value="-84.1992" /><Key frame="123" value="-84.1113" /><Key frame="135" value="-84.2871" /><Key frame="148" value="-84.375" /><Key frame="160" value="-84.5508" /><Key frame="173" value="-84.5508" /><Key frame="185" value="-84.375" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="23" value="0.77065" /><Key frame="35" value="0.759227" /><Key frame="48" value="0.429701" /><Key frame="60" value="0.467487" /><Key frame="73" value="0.74341" /><Key frame="85" value="0.758348" /><Key frame="98" value="0.759227" /><Key frame="110" value="0.757469" /><Key frame="123" value="0.6529" /><Key frame="135" value="0.457821" /><Key frame="148" value="0.424429" /><Key frame="160" value="0.447276" /><Key frame="173" value="0.466608" /><Key frame="185" value="0.463972" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="23" value="77.959" /><Key frame="35" value="77.2559" /><Key frame="48" value="76.1133" /><Key frame="60" value="74.707" /><Key frame="73" value="74.3555" /><Key frame="85" value="77.3438" /><Key frame="98" value="91.4063" /><Key frame="110" value="104.678" /><Key frame="123" value="100.811" /><Key frame="135" value="86.8359" /><Key frame="148" value="76.1133" /><Key frame="160" value="75.0586" /><Key frame="173" value="75.0586" /><Key frame="185" value="72.2461" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="23" value="1.23047" /><Key frame="35" value="2.02149" /><Key frame="48" value="2.90039" /><Key frame="60" value="2.54882" /><Key frame="73" value="2.28516" /><Key frame="85" value="5.18555" /><Key frame="98" value="7.99804" /><Key frame="110" value="9.14062" /><Key frame="123" value="6.50391" /><Key frame="135" value="5.18555" /><Key frame="148" value="3.95508" /><Key frame="160" value="2.19727" /><Key frame="173" value="1.14258" /><Key frame="185" value="1.40625" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="23" value="-20.2175" /><Key frame="35" value="-4.83644" /><Key frame="48" value="6.50159" /><Key frame="60" value="6.94104" /><Key frame="73" value="8.17153" /><Key frame="85" value="18.2791" /><Key frame="98" value="18.9822" /><Key frame="110" value="12.5661" /><Key frame="123" value="8.69887" /><Key frame="135" value="8.69887" /><Key frame="148" value="8.69887" /><Key frame="160" value="-3.1665" /><Key frame="173" value="-22.3269" /><Key frame="185" value="-24.8758" /></ActuatorCurve></ActuatorList></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /><Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe><BehaviorKeyframe name="hands" index="50"><Diagram><Box name="noticeHands" id="1" localization="8" tooltip="" x="128" y="93"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="162"><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HipPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HipRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="KneePitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="12" value="38.3203" /><Key frame="24" value="38.584" /><Key frame="37" value="42.5391" /><Key frame="49" value="59.5899" /><Key frame="62" value="69.7852" /><Key frame="74" value="76.377" /><Key frame="87" value="78.5742" /><Key frame="99" value="77.6953" /><Key frame="112" value="75.8496" /><Key frame="124" value="73.5645" /><Key frame="137" value="75.7617" /><Key frame="149" value="75.8496" /><Key frame="162" value="74.0039" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="12" value="82.8809" /><Key frame="24" value="83.2324" /><Key frame="37" value="82.793" /><Key frame="49" value="83.4082" /><Key frame="62" value="83.4082" /><Key frame="74" value="83.1445" /><Key frame="87" value="83.2324" /><Key frame="99" value="83.0566" /><Key frame="112" value="83.3203" /><Key frame="124" value="84.5508" /><Key frame="137" value="87.5391" /><Key frame="149" value="87.1875" /><Key frame="162" value="86.2207" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="12" value="0.781195" /><Key frame="24" value="0.358524" /><Key frame="37" value="0.233743" /><Key frame="49" value="0.223199" /><Key frame="62" value="0.225835" /><Key frame="74" value="0.405097" /><Key frame="87" value="0.788225" /><Key frame="99" value="0.871705" /><Key frame="112" value="0.870826" /><Key frame="124" value="0.870826" /><Key frame="137" value="0.870826" /><Key frame="149" value="0.844464" /><Key frame="162" value="0.860281" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="12" value="77.8711" /><Key frame="24" value="77.6953" /><Key frame="37" value="76.4649" /><Key frame="49" value="76.4649" /><Key frame="62" value="76.377" /><Key frame="74" value="74.6191" /><Key frame="87" value="74.1797" /><Key frame="99" value="74.0918" /><Key frame="112" value="74.6191" /><Key frame="124" value="74.4434" /><Key frame="137" value="74.2676" /><Key frame="149" value="74.2676" /><Key frame="162" value="74.3555" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="12" value="-0.615236" /><Key frame="24" value="-0.878909" /><Key frame="37" value="-1.49414" /><Key frame="49" value="-2.54882" /><Key frame="62" value="-1.49414" /><Key frame="74" value="-2.28516" /><Key frame="87" value="-3.07617" /><Key frame="99" value="-3.42773" /><Key frame="112" value="-3.42773" /><Key frame="124" value="-3.51562" /><Key frame="137" value="-1.9336" /><Key frame="149" value="-0.703127" /><Key frame="162" value="-0.791018" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="12" value="34.9833" /><Key frame="24" value="31.3797" /><Key frame="37" value="23.7332" /><Key frame="49" value="17.4929" /><Key frame="62" value="46.0577" /><Key frame="74" value="81.3901" /><Key frame="87" value="88.1578" /><Key frame="99" value="71.2826" /><Key frame="112" value="32.0829" /><Key frame="124" value="-23.8163" /><Key frame="137" value="-56.9514" /><Key frame="149" value="-42.6251" /><Key frame="162" value="2.1997" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="12" value="-38.3203" /><Key frame="24" value="-38.584" /><Key frame="37" value="-42.5391" /><Key frame="49" value="-59.5899" /><Key frame="62" value="-69.7852" /><Key frame="74" value="-76.377" /><Key frame="87" value="-78.5742" /><Key frame="99" value="-77.6953" /><Key frame="112" value="-75.8496" /><Key frame="124" value="-73.5645" /><Key frame="137" value="-75.7617" /><Key frame="149" value="-75.8496" /><Key frame="162" value="-74.0039" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="12" value="-82.8809" /><Key frame="24" value="-83.2324" /><Key frame="37" value="-82.793" /><Key frame="49" value="-83.4082" /><Key frame="62" value="-83.4082" /><Key frame="74" value="-83.1445" /><Key frame="87" value="-83.2324" /><Key frame="99" value="-83.0566" /><Key frame="112" value="-83.3203" /><Key frame="124" value="-84.5508" /><Key frame="137" value="-87.5391" /><Key frame="149" value="-87.1875" /><Key frame="162" value="-86.2207" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="12" value="0.781195" /><Key frame="24" value="0.358524" /><Key frame="37" value="0.233743" /><Key frame="49" value="0.223199" /><Key frame="62" value="0.225835" /><Key frame="74" value="0.405097" /><Key frame="87" value="0.788225" /><Key frame="99" value="0.871705" /><Key frame="112" value="0.870826" /><Key frame="124" value="0.870826" /><Key frame="137" value="0.870826" /><Key frame="149" value="0.844464" /><Key frame="162" value="0.860281" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="12" value="77.8711" /><Key frame="24" value="77.6953" /><Key frame="37" value="76.4649" /><Key frame="49" value="76.4649" /><Key frame="62" value="76.377" /><Key frame="74" value="74.6191" /><Key frame="87" value="74.1797" /><Key frame="99" value="74.0918" /><Key frame="112" value="74.6191" /><Key frame="124" value="74.4434" /><Key frame="137" value="74.2676" /><Key frame="149" value="74.2676" /><Key frame="162" value="74.3555" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="12" value="0.615236" /><Key frame="24" value="0.878909" /><Key frame="37" value="1.49414" /><Key frame="49" value="2.54882" /><Key frame="62" value="1.49414" /><Key frame="74" value="2.28516" /><Key frame="87" value="3.07617" /><Key frame="99" value="3.42773" /><Key frame="112" value="3.42773" /><Key frame="124" value="3.51562" /><Key frame="137" value="1.9336" /><Key frame="149" value="0.703127" /><Key frame="162" value="0.791018" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="12" value="-34.9833" /><Key frame="24" value="-31.3797" /><Key frame="37" value="-23.7332" /><Key frame="49" value="-17.4929" /><Key frame="62" value="-46.0577" /><Key frame="74" value="-81.3901" /><Key frame="87" value="-88.1578" /><Key frame="99" value="-71.2826" /><Key frame="112" value="-32.0829" /><Key frame="124" value="23.8163" /><Key frame="137" value="56.9514" /><Key frame="149" value="42.6251" /><Key frame="162" value="-2.1997" /></ActuatorCurve></ActuatorList></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /><Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe><BehaviorKeyframe name="arms" index="60"><Diagram><Box name="noticeArms" id="1" localization="8" tooltip="" x="174" y="56"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="110"><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HeadYaw" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HipPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HipRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="KneePitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="38.4961" /><Key frame="22" value="46.2305" /><Key frame="35" value="51.3281" /><Key frame="47" value="58.0957" /><Key frame="60" value="69.1699" /><Key frame="72" value="58.6231" /><Key frame="85" value="44.5606" /><Key frame="97" value="34.4531" /><Key frame="110" value="35.6836" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="84.1113" /><Key frame="22" value="82.002" /><Key frame="35" value="67.5879" /><Key frame="47" value="56.5137" /><Key frame="60" value="57.3926" /><Key frame="72" value="62.2266" /><Key frame="85" value="73.5645" /><Key frame="97" value="79.4531" /><Key frame="110" value="71.8066" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.783831" /><Key frame="22" value="0.74341" /><Key frame="35" value="0.727592" /><Key frame="47" value="0.724956" /><Key frame="60" value="0.725835" /><Key frame="72" value="0.725835" /><Key frame="85" value="0.725835" /><Key frame="97" value="0.719684" /><Key frame="110" value="0.704745" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="77.0801" /><Key frame="22" value="76.9043" /><Key frame="35" value="80.9473" /><Key frame="47" value="78.4863" /><Key frame="60" value="67.9395" /><Key frame="72" value="57.2168" /><Key frame="85" value="53.7891" /><Key frame="97" value="60.0293" /><Key frame="110" value="71.7188" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-0.878909" /><Key frame="22" value="-1.49414" /><Key frame="35" value="-13.9746" /><Key frame="47" value="-37.7051" /><Key frame="60" value="-40.5176" /><Key frame="72" value="-27.2461" /><Key frame="85" value="-10.3711" /><Key frame="97" value="-2.98828" /><Key frame="110" value="-7.55859" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="32.9618" /><Key frame="22" value="29.9735" /><Key frame="35" value="30.2372" /><Key frame="47" value="57.3078" /><Key frame="60" value="100.902" /><Key frame="72" value="84.2027" /><Key frame="85" value="44.0362" /><Key frame="97" value="14.3288" /><Key frame="110" value="19.3386" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowRoll" mute="0" unit="0"><Key frame="10" value="-38.4961" /><Key frame="22" value="-46.2305" /><Key frame="35" value="-51.3281" /><Key frame="47" value="-58.0957" /><Key frame="60" value="-69.1699" /><Key frame="72" value="-58.6231" /><Key frame="85" value="-44.5606" /><Key frame="97" value="-34.4531" /><Key frame="110" value="-35.6836" /></ActuatorCurve><ActuatorCurve name="value" actuator="LElbowYaw" mute="0" unit="0"><Key frame="10" value="-84.1113" /><Key frame="22" value="-82.002" /><Key frame="35" value="-67.5879" /><Key frame="47" value="-56.5137" /><Key frame="60" value="-57.3926" /><Key frame="72" value="-62.2266" /><Key frame="85" value="-73.5645" /><Key frame="97" value="-79.4531" /><Key frame="110" value="-71.8066" /></ActuatorCurve><ActuatorCurve name="value" actuator="LHand" mute="0" unit="1"><Key frame="10" value="0.783831" /><Key frame="22" value="0.74341" /><Key frame="35" value="0.727592" /><Key frame="47" value="0.724956" /><Key frame="60" value="0.725835" /><Key frame="72" value="0.725835" /><Key frame="85" value="0.725835" /><Key frame="97" value="0.719684" /><Key frame="110" value="0.704745" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderPitch" mute="0" unit="0"><Key frame="10" value="77.0801" /><Key frame="22" value="76.9043" /><Key frame="35" value="80.9473" /><Key frame="47" value="78.4863" /><Key frame="60" value="67.9395" /><Key frame="72" value="57.2168" /><Key frame="85" value="53.7891" /><Key frame="97" value="60.0293" /><Key frame="110" value="71.7188" /></ActuatorCurve><ActuatorCurve name="value" actuator="LShoulderRoll" mute="0" unit="0"><Key frame="10" value="0.878909" /><Key frame="22" value="1.49414" /><Key frame="35" value="13.9746" /><Key frame="47" value="37.7051" /><Key frame="60" value="40.5176" /><Key frame="72" value="27.2461" /><Key frame="85" value="10.3711" /><Key frame="97" value="2.98828" /><Key frame="110" value="7.55859" /></ActuatorCurve><ActuatorCurve name="value" actuator="LWristYaw" mute="0" unit="0"><Key frame="10" value="-32.9618" /><Key frame="22" value="-29.9735" /><Key frame="35" value="-30.2372" /><Key frame="47" value="-57.3078" /><Key frame="60" value="-100.902" /><Key frame="72" value="-84.2027" /><Key frame="85" value="-44.0362" /><Key frame="97" value="-14.3288" /><Key frame="110" value="-19.3386" /></ActuatorCurve></ActuatorList></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /><Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe><BehaviorKeyframe name="neck" index="70"><Diagram><Box name="noticeNeck" id="1" localization="8" tooltip="" x="175" y="56"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="-1" size="106"><ActuatorList model="juliette"><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="10" value="16.084" /><Key frame="22" value="15.293" /><Key frame="35" value="30.1465" /><Key frame="47" value="26.1914" /><Key frame="60" value="11.5137" /><Key frame="85" value="19.9512" /><Key frame="97" value="13.0078" /><Key frame="106" value="15.0293" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="10" value="3.25195" /><Key frame="22" value="11.6016" /><Key frame="35" value="10.3711" /><Key frame="47" value="-16.9629" /><Key frame="60" value="-9.66797" /><Key frame="72" value="6.76758" /><Key frame="85" value="-1.40625" /><Key frame="106" value="0.527345" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HipRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="KneePitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="RElbowRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="RElbowYaw" mute="1" unit="0" /><ActuatorCurve name="value" actuator="RHand" mute="1" unit="1" /><ActuatorCurve name="value" actuator="RShoulderPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="RShoulderRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="RWristYaw" mute="1" unit="0" /><ActuatorCurve name="value" actuator="LElbowRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="LElbowYaw" mute="1" unit="0" /><ActuatorCurve name="value" actuator="LHand" mute="1" unit="1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="LShoulderRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="LWristYaw" mute="1" unit="0" /></ActuatorList></Timeline></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /><Link inputowner="0" indexofinput="5" outputowner="1" indexofoutput="4" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box><Box name="Play Sound (1)" id="17" localization="8" tooltip="Play a sound file. Select the file in parameters. The format of the file can be wav or ogg (on virtual robot) and also mp3 (on a real robot).&#x0A;&#x0A;Note: There can be some delay to play ogg or mp3 (on a robot) files. We advise you to use wav if&#x0A;you want a fast play of the file." x="665" y="39"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        self.bIsRunning = False

    def onUnload(self):
        self.bIsRunning = False

    def onInput_onStart(self):
        self.bIsRunning = True

    def onInput_onStop(self):
        if( self.bIsRunning ):
            self.onUnload()
            self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Starts the music." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Stops the music." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished or stopped." id="4" /><Parameter name="File name" inherits_from_parent="0" content_type="4" value="/../fx/169855__gnotesoundz__wind-chime-g-003.wav" default_value="" tooltip="Name of the file you want to play.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="5" /><Parameter name="Begin position (s)" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="6" /><Parameter name="Volume (%)" inherits_from_parent="0" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="7" /><Parameter name="Balance L/R" inherits_from_parent="0" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="8" /><Parameter name="Play in loop" inherits_from_parent="0" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="9" /><Timeline enable="0"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe1" index="1"><Diagram><Box name="Play Sound File" id="2" localization="8" tooltip="Play the sound." x="442" y="70"><bitmap>media/images/box/interaction/play_music.png</bitmap><script language="4"><content><![CDATA[import time

class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)
        self.player = ALProxy('ALAudioPlayer')
        self.playerStop = ALProxy('ALAudioPlayer', True) #Create another proxy as wait is blocking if audioout is remote

    def onLoad(self):
        self.bIsRunning = False
        self.ids = []

    def onUnload(self):
        for id in self.ids:
            try:
                self.playerStop.stop(id)
            except:
                pass
        while( self.bIsRunning ):
            time.sleep( 0.2 )

    def onInput_onStart(self, p):
        self.bIsRunning = True
        try:
            if (self.getParameter("Play in loop")) :
               id = self.player.post.playFileInLoop(p,self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            else :
               id = self.player.post.playFileFromPosition(p,self.getParameter("Begin position (s)"),self.getParameter("Volume (%)")/100.,self.getParameter("Balance L/R"))
            self.ids.append(id)
            self.player.wait(id, 0)
        finally:
            try:
                self.ids.remove(id)
            except:
                pass
            if( self.ids == [] ):
                self.onStopped() # activate output of the box
                self.bIsRunning = False

    def onInput_onStop(self):
        self.onUnload()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when Diagram is loaded." id="1" /><Input name="onStart" type="3" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this Input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this Input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when Box behavior is finished." id="4" /><Parameter name="Begin position (s)" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="0" max="600" tooltip="Position in seconds where the playing must start." id="5" /><Parameter name="Volume (%)" inherits_from_parent="1" content_type="1" value="100" default_value="100" min="0" max="100" tooltip="Volume the file is played with." id="6" /><Parameter name="Balance L/R" inherits_from_parent="1" content_type="2" value="0" default_value="0" min="-1" max="1" tooltip="Value which determines if the sound is played more on the robot&apos;s left or right.&#x0A;You can particularly set it to:&#x0A;- -1 to play only on the left loudspeaker.&#x0A;- 0 to play on both loudspeakers.&#x0A;- 1 to play only on the right loudspeaker." id="7" /><Parameter name="Play in loop" inherits_from_parent="1" content_type="0" value="0" default_value="0" tooltip="This parameter allows to play the file in loop. The playing will start each time at&#x0A;the beginning of the file." id="8" /></Box><Box name="Get Attached File" id="1" localization="8" tooltip="Use this box to choose an attached file in its parameters. The filename will be sent on&#x0A;the output when the input is stimulated." x="216" y="71"><bitmap>media/images/box/folder.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self, False)

    def onLoad(self):
        pass

    def onInput_onStart(self):
        self.onStopped(self.behaviorAbsolutePath() + self.getParameter("File name"))]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="1" inner="0" tooltip="To send the filepath on the output." id="2" /><Output name="onStopped" type="3" type_size="1" nature="2" inner="0" tooltip="The filepath of the selected resource file." id="3" /><Parameter name="File name" inherits_from_parent="1" content_type="4" value="" default_value="" tooltip="Name of the file which is going to be sent on the box output.&#x0A;&#x0A;Note: You can click on the folder icon to browse the project content or import&#x0A;new files to the project." id="4" /></Box><Link inputowner="0" indexofinput="4" outputowner="2" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="2" indexofinput="2" outputowner="1" indexofoutput="3" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline><Resource name="Audio player" type="Lock" timeout="0" /></Box><Box name="Go to position Stand" id="18" localization="8" tooltip="Robot will go to the position Stand&lt;br/&gt;Position description : Standing position with low power consumption. " x="833" y="69"><bitmap>media/images/positions/Stand.png</bitmap><script language="4"><content><![CDATA[#~ This script was generated automatically by drang&drop from Position Library
class MyClass(GeneratedClass):
    def __init__(self):
        try: # disable autoBind
          GeneratedClass.__init__(self, False)
        except TypeError: # if NAOqi < 1.14
          GeneratedClass.__init__( self )

    def onLoad(self):
        self.postureProxy = None
        try:
            self.postureProxy = ALProxy("ALRobotPosture")
        except:
            self.logger.error("Module 'ALRobotPosture' not found.")

    def onUnload(self):
        if(self.postureProxy != None):
            self.postureProxy.stopMove()

    def onInput_onStart(self):
        if(self.postureProxy != None):
            result = self.postureProxy.goToPosture("Stand", 0.8)
            if(result):
                self.success()
            else:
                self.logger.error("Posture Stand is not a part of the standard posture library or robot cannot reach the posture")
                self.failure()
        else:
            self.failure()

    def onInput_onStop(self):
        self.onUnload() #~ it is recommanded to call onUnload of this box in a onStop method,               as the code written in onUnload is used to stop the box as well
        pass]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="success" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture has been reached." id="4" /><Output name="failure" type="1" type_size="1" nature="1" inner="0" tooltip="Stimulated if the posture could not be reached." id="5" /><Resource name="All motors" type="Lock" timeout="0" /><Resource name="Stiffness" type="Lock" timeout="0" /></Box><Box name="ringAnimation (1)" id="19" localization="8" tooltip="second edition!" x="200" y="273"><bitmap>media/images/box/box-timeLine.png</bitmap><script language="4"><content><![CDATA[]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /><Timeline enable="1" fps="25" start_frame="1" end_frame="122" size="122"><BehaviorLayer name="behavior_layer1"><BehaviorKeyframe name="keyframe51" index="51"><Diagram><Box name="soundEvent" id="1" localization="8" tooltip="" x="134" y="77"><bitmap>media/images/box/box-python-script.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):
    def __init__(self):
        GeneratedClass.__init__(self)

    def onLoad(self):
        #put initialization code here
        pass

    def onUnload(self):
        #put clean-up code here
        pass

    def onInput_onStart(self):
        memory = self.session().service("ALMemory")
        memory.raiseMicroEvent("memSoundEvent", "singing_bowl.ogg")

    def onInput_onStop(self):
        self.onUnload() #it is recommended to reuse the clean-up as the box is stopped
        self.onStopped() #activate the output of the box]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="4" /></Box><Link inputowner="1" indexofinput="2" outputowner="0" indexofoutput="1" /></Diagram></BehaviorKeyframe></BehaviorLayer><ActuatorList model=""><ActuatorCurve name="value" actuator="HeadPitch" mute="0" unit="0"><Key frame="11" value="-12.9199" /><Key frame="18" value="-0.351564" /><Key frame="27" value="11.7774" /><Key frame="35" value="11.8652" /><Key frame="61" value="-4.04423" /><Key frame="69" value="-4.13213" /><Key frame="87" value="-4.04423" /></ActuatorCurve><ActuatorCurve name="value" actuator="HeadYaw" mute="0" unit="0"><Key frame="11" value="-6.15235" /><Key frame="18" value="-10.3711" /><Key frame="27" value="-21.4453" /><Key frame="35" value="-25.5762" /><Key frame="42" value="-31.5527" /><Key frame="48" value="-31.5527" /><Key frame="55" value="-31.5527" /><Key frame="61" value="-31.377" /><Key frame="69" value="-20.918" /><Key frame="87" value="-4.74609" /></ActuatorCurve><ActuatorCurve name="value" actuator="HipPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="HipRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="KneePitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="LElbowRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="LElbowYaw" mute="1" unit="0" /><ActuatorCurve name="value" actuator="LHand" mute="1" unit="1" /><ActuatorCurve name="value" actuator="LShoulderPitch" mute="1" unit="0" /><ActuatorCurve name="value" actuator="LShoulderRoll" mute="1" unit="0" /><ActuatorCurve name="value" actuator="LWristYaw" mute="1" unit="0" /><ActuatorCurve name="value" actuator="RElbowRoll" mute="0" unit="0"><Key frame="10" value="29.7949" /><Key frame="14" value="37.0898" /><Key frame="18" value="49.9438" /><Key frame="23" value="57.4145" /><Key frame="28" value="63.5215" /><Key frame="32" value="69.9469" /><Key frame="37" value="72.232" /><Key frame="41" value="77.6" /><Key frame="44" value="77.6" /><Key frame="55" value="57.0065"><Tangent side="left" interpType="bezier" abscissaParam="-4.63919" ordinateParam="14.1821" /><Tangent side="right" interpType="bezier" abscissaParam="5.67469" ordinateParam="7.25531" /></Key><Key frame="62" value="64.2967" /><Key frame="68" value="58.9872" /><Key frame="74" value="55.1293" /><Key frame="84" value="48.1641" /><Key frame="94" value="37.0019" /><Key frame="118" value="29.7949" /></ActuatorCurve><ActuatorCurve name="value" actuator="RElbowYaw" mute="0" unit="0"><Key frame="10" value="70.8398" /><Key frame="14" value="72.334" /><Key frame="18" value="72.4219" /><Key frame="23" value="73.125" /><Key frame="28" value="81.0352" /><Key frame="32" value="88.8574" /><Key frame="37" value="97.9102" /><Key frame="41" value="96.9434" /><Key frame="44" value="96.1523" /><Key frame="48" value="96.9434" /><Key frame="51" value="96.7676" /><Key frame="55" value="96.2402" /><Key frame="58" value="95.4492" /><Key frame="61" value="86.8359" /><Key frame="67" value="87.3633" /><Key frame="74" value="87.0117" /><Key frame="84" value="87.8906" /><Key frame="94" value="87.8906" /><Key frame="118" value="70.8398" /></ActuatorCurve><ActuatorCurve name="value" actuator="RHand" mute="0" unit="1"><Key frame="10" value="0.587873" /><Key frame="14" value="0.586116" /><Key frame="18" value="0.584359" /><Key frame="23" value="0.278559" /><Key frame="28" value="0.02" /><Key frame="32" value="0.02" /><Key frame="37" value="0.02" /><Key frame="41" value="0.02" /><Key frame="44" value="0.02" /><Key frame="48" value="0.02" /><Key frame="51" value="0.02" /><Key frame="55" value="0.02" /><Key frame="58" value="0.02" /><Key frame="61" value="0.02" /><Key frame="67" value="0.02" /><Key frame="74" value="0.02" /><Key frame="84" value="0.02" /><Key frame="94" value="0.358524" /><Key frame="118" value="0.587873" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderPitch" mute="0" unit="0"><Key frame="10" value="88.5937" /><Key frame="14" value="86.3086" /><Key frame="18" value="83.8477" /><Key frame="23" value="79.0137" /><Key frame="28" value="70.4883" /><Key frame="32" value="63.2813" /><Key frame="51" value="40.9773" /><Key frame="55" value="39.9226" /><Key frame="67" value="41.2557" /><Key frame="70" value="46.0897" /><Key frame="76" value="52.4118" /><Key frame="79" value="52.9244" /><Key frame="84" value="59.2034" /><Key frame="94" value="66.0938" /><Key frame="118" value="88.5937" /></ActuatorCurve><ActuatorCurve name="value" actuator="RShoulderRoll" mute="0" unit="0"><Key frame="10" value="-8.26171" /><Key frame="14" value="-9.05273" /><Key frame="18" value="-8.4375" /><Key frame="23" value="-9.75586" /><Key frame="28" value="-10.8984" /><Key frame="32" value="-11.1621" /><Key frame="37" value="-11.8652" /><Key frame="41" value="-13.2715" /><Key frame="44" value="-11.25" /><Key frame="48" value="-14.2383" /><Key frame="51" value="-24.3457" /><Key frame="55" value="-23.8184" /><Key frame="58" value="-20.8301" /><Key frame="61" value="-15.7324" /><Key frame="67" value="-4.57031" /><Key frame="74" value="-3.16406" /><Key frame="84" value="-2.98828" /><Key frame="94" value="-3.42773" /><Key frame="118" value="-8.26171" /></ActuatorCurve><ActuatorCurve name="value" actuator="RWristYaw" mute="0" unit="0"><Key frame="10" value="4.12851" /><Key frame="14" value="14.8513" /><Key frame="18" value="24.1678" /><Key frame="23" value="32.2539" /><Key frame="28" value="36.6484" /><Key frame="32" value="27.0682" /><Key frame="37" value="21.1795" /><Key frame="41" value="18.5427" /><Key frame="44" value="19.158" /><Key frame="48" value="16.8728" /><Key frame="51" value="16.7849" /><Key frame="55" value="16.1697" /><Key frame="58" value="16.0818" /><Key frame="61" value="15.2029" /><Key frame="67" value="14.1482" /><Key frame="74" value="14.7634" /><Key frame="84" value="11.5993" /><Key frame="94" value="0.876518" /><Key frame="118" value="4.12851" /></ActuatorCurve></ActuatorList></Timeline></Box><Box name="slideshow" id="8" localization="8" tooltip="display an image on the screen.&#x0A;Modified to show slideshow&#x0A;&#x0A;V1.0.0&#x0A;" x="982" y="164"><bitmap>media/images/box/interaction/rec_movie.png</bitmap><script language="4"><content><![CDATA[class MyClass(GeneratedClass):

    def onLoad(self):
        self.running = True
        self.nameCount = 1

    def onUnload(self):
        self.running = False
        pass

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def _getAbsoluteUrl(self, partial_url):
        import os
        subPath = os.path.join(self.packageUid(), os.path.normpath(partial_url).lstrip("\\/"))
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        return "http://%s/apps/%s" %(self._getTabletService().robotIp(), subPath.replace(os.path.sep, "/"))

    def onInput_onStart(self):
        self.logger.debug("picture display starting")
        while self.running :
            self.showNextPicture()
            t = time.time()  #non-blocking alternative to sleep
            while (t + 60.0) > time.time() and self.running : #should loop for 60 sec
                pass
            #time up

        self.logger.debug("picture display starting")

    def showNextPicture(self):
        self.logger.debug("show pic")
        tabletService = self._getTabletService()
        if tabletService:
            try:
                url = self.getParameter("ImageUrl")
                if self.nameCount > 3 :
                    self.nameCount = 1
                url = url+"%s.jpg" %str(self.nameCount)
                self.nameCount += 1
                self.logger.debug(url)

                if url == '':
                    self.logger.error("URL of the image is empty")
                if not url.startswith('http'):
                    url = self._getAbsoluteUrl(url)
                tabletService.showImage(url)

            except Exception as err:
                self.logger.error("Error during ShowImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't display the image.")
            self.onStopped()

    def onInput_onHideImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                tabletService.hideImage()
            except Exception as err:
                self.logger.error("Error during HideImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't hide the image.")
            self.onStopped()

    def onInput_onPreLoadImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                partialUrl = self.getParameter("ImageUrl")
                fullUrl = self._getAbsoluteUrl(partialUrl)
                tabletService.preLoadImage(fullUrl)
            except Exception as err:
                self.logger.warning("Error during preLoadImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't preload the image.")
            self.onStopped()

    def onInput_onStop(self):
        self.running = False
        self.onUnload()
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="onHideImage" type="1" type_size="1" nature="1" inner="0" tooltip="Hide the image when a signal is received on this input." id="4" /><Input name="onPreLoadImage" type="1" type_size="1" nature="1" inner="0" tooltip="Preload the image when a signal is received on this input." id="5" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" /><Parameter name="ImageUrl" inherits_from_parent="0" content_type="3" value="Norma_meditation_screen_" default_value="" custom_choice="0" tooltip='path of the image inside the &quot;html&quot; folder (e.g. &quot;/images/myimage.png&quot;' id="7" /></Box><Box name="Show Image" id="3" localization="8" tooltip="display an image on the screen&#x0A;&#x0A;V1.0.0&#x0A;" x="964" y="6"><bitmap>media/images/box/interaction/rec_movie.png</bitmap><script language="4"><content><![CDATA[

class MyClass(GeneratedClass):

    def onLoad(self):
        pass

    def onUnload(self):
        pass

    def _getTabletService(self):
        tabletService = None
        try:
            tabletService = self.session().service("ALTabletService")
        except Exception as e:
            self.logger.error(e)
        return tabletService

    def _getAbsoluteUrl(self, partial_url):
        import os
        subPath = os.path.join(self.packageUid(), os.path.normpath(partial_url).lstrip("\\/"))
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        return "http://%s/apps/%s" %(self._getTabletService().robotIp(), subPath.replace(os.path.sep, "/"))

    def onInput_onStart(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                url = self.getParameter("ImageUrl")
                if url == '':
                    self.logger.error("URL of the image is empty")
                if not url.startswith('http'):
                    url = self._getAbsoluteUrl(url)
                tabletService.showImage(url)
            except Exception as err:
                self.logger.error("Error during ShowImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't display the image.")
            self.onStopped()

    def onInput_onHideImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                tabletService.hideImage()
            except Exception as err:
                self.logger.error("Error during HideImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't hide the image.")
            self.onStopped()

    def onInput_onPreLoadImage(self):
        # We create TabletService here in order to avoid
        # problems with connections and disconnections of the tablet during the life of the application
        tabletService = self._getTabletService()
        if tabletService:
            try:
                partialUrl = self.getParameter("ImageUrl")
                fullUrl = self._getAbsoluteUrl(partialUrl)
                tabletService.preLoadImage(fullUrl)
            except Exception as err:
                self.logger.warning("Error during preLoadImage : %s " % err)
                self.onStopped()
        else:
            self.logger.warning("No ALTabletService, can't preload the image.")
            self.onStopped()

    def onInput_onStop(self):
        self.onUnload()
        self.onStopped()]]></content></script><Input name="onLoad" type="1" type_size="1" nature="0" inner="1" tooltip="Signal sent when diagram is loaded." id="1" /><Input name="onStart" type="1" type_size="1" nature="2" inner="0" tooltip="Box behavior starts when a signal is received on this input." id="2" /><Input name="onStop" type="1" type_size="1" nature="3" inner="0" tooltip="Box behavior stops when a signal is received on this input." id="3" /><Input name="onHideImage" type="1" type_size="1" nature="1" inner="0" tooltip="Hide the image when a signal is received on this input." id="4" /><Input name="onPreLoadImage" type="1" type_size="1" nature="1" inner="0" tooltip="Preload the image when a signal is received on this input." id="5" /><Output name="onStopped" type="1" type_size="1" nature="1" inner="0" tooltip="Signal sent when box behavior is finished." id="6" /><Parameter name="ImageUrl" inherits_from_parent="0" content_type="3" value="Norma_meditation_screen_3.jpg" default_value="" custom_choice="0" tooltip='path of the image inside the &quot;html&quot; folder (e.g. &quot;/images/myimage.png&quot;' id="7" /></Box><Link inputowner="2" indexofinput="2" outputowner="0" indexofoutput="4" /><Link inputowner="7" indexofinput="2" outputowner="0" indexofoutput="5" /><Link inputowner="6" indexofinput="3" outputowner="6" indexofoutput="9" /><Link inputowner="6" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="10" indexofinput="2" outputowner="6" indexofoutput="9" /><Link inputowner="9" indexofinput="2" outputowner="10" indexofoutput="4" /><Link inputowner="12" indexofinput="2" outputowner="9" indexofoutput="4" /><Link inputowner="1" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="13" indexofinput="2" outputowner="0" indexofoutput="7" /><Link inputowner="14" indexofinput="2" outputowner="0" indexofoutput="8" /><Link inputowner="11" indexofinput="2" outputowner="0" indexofoutput="9" /><Link inputowner="15" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="16" indexofinput="2" outputowner="0" indexofoutput="2" /><Link inputowner="16" indexofinput="2" outputowner="16" indexofoutput="5" /><Link inputowner="13" indexofinput="2" outputowner="16" indexofoutput="5" /><Link inputowner="18" indexofinput="2" outputowner="17" indexofoutput="4" /><Link inputowner="19" indexofinput="2" outputowner="0" indexofoutput="6" /><Link inputowner="17" indexofinput="2" outputowner="1" indexofoutput="4" /><Link inputowner="3" indexofinput="3" outputowner="18" indexofoutput="4" /><Link inputowner="3" indexofinput="4" outputowner="17" indexofoutput="4" /><Link inputowner="3" indexofinput="2" outputowner="12" indexofoutput="4" /><Link inputowner="0" indexofinput="10" outputowner="3" indexofoutput="6" /></Diagram></BehaviorKeyframe></BehaviorLayer></Timeline></Box></ChoregrapheProject>